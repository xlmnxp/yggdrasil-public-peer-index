---
import Layout from "../layouts/Layout.astro";
import Peer, { getSize } from "../components/Peer.astro";
import { execSync } from "child_process";
import { exec } from "child_process";
import fs from "fs";
import Code from "../components/Code.astro";
import HJSON from "hjson";
import { promisify } from "util";
import PeersTable from "../components/PeersTable.astro";

let { peers }: { peers: any[] }= JSON.parse(
	execSync("yggdrasilctl -json getPeers", {
		encoding: "utf-8",
	})
);

peers = peers.filter((v,i,a)=>a.findIndex(v2=>(v2.address===v.address))===i);

peers = peers.filter(peer => peer.up);

const self = JSON.parse(
	execSync("yggdrasilctl -json getSelf", {
		encoding: "utf-8",
	})
);

const { Peers: _upStreamsPeers } = HJSON.parse(
	fs.readFileSync("/etc/yggdrasil/yggdrasil.conf", {
		encoding: "utf-8",
	})
);

let upStreamsPeers: any[] = peers.filter((peer: any) =>
	_upStreamsPeers.includes(peer.remote)
);

let downStreamsPeers: any[] = peers.filter(
	(peer: any) => !_upStreamsPeers.includes(peer.remote)
);

const Traffic = {
	download: peers.reduce(
		(previousPeer, currentPeer) => {
			return {
				bytes_recvd: previousPeer.bytes_recvd + currentPeer.bytes_recvd,
			};
		},
		{
			bytes_recvd: 0,
		}
	).bytes_recvd,
	upload: peers.reduce(
		(previousPeer, currentPeer) => {
			return {
				bytes_sent: previousPeer.bytes_sent + currentPeer.bytes_sent,
			};
		},
		{
			bytes_sent: 0,
		}
	).bytes_sent,
};

await promisify(exec)(
	`vnstati -hs -i ens3 -o ./public/output.png --transparent --headertext "Yggdrasil / hourly"`
);
---

<Layout title="201:ca29:d4c5:50c8:b6f3:aa9a:e5d7:616c | Peers">
	<main>
		<div class="mx-auto max-w-7xl sm:px-6 lg:px-8">
			<div class="overflow-hidden shadow sm:rounded-lg bg-white dark:bg-gray-800 dark:text-white">
				<div class="px-4 py-5 sm:px-6">
					<h3 class="text-lg font-medium leading-6 text-gray-900 dark:text-white">
						Public Peer Details
					</h3>
				</div>
				<div class="border-t border-gray-200 dark:border-gray-700 px-4 py-5 sm:p-0">
					<dl class="sm:divide-y sm:divide-gray-200 dark:sm:divide-gray-700">
						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Public IP
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								<Code content="tcp://pp1.ygg.sy.sa:8441" />
								<Code content="tls://pp1.ygg.sy.sa:8442" />
								<Code content="quic://pp1.ygg.sy.sa:8443" />
							</dd>
						</div>
						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Yggdrasil IPv6 Address
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								<Code content={self.address} />
							</dd>
						</div>
						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Yggdrasil IPv6 Subnet
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								<Code
									content={self.subnet}
								/>
							</dd>
						</div>
						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Yggdrasil Version
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								<Code
									content={self.build_version}
								/>
							</dd>
						</div>
						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Yggdrasil Public Key
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								<Code
									content={self.key}
								/>
							</dd>
						</div>
						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Location
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								Saudi Arabia, Jeddah
							</dd>
						</div>
						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Traffic
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								10TB/month
							</dd>
						</div>
						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Bandwidth
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								0.5Gbps (500Mbps)
							</dd>
						</div>
						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Downstreams Peers
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								{downStreamsPeers.length}
							</dd>
						</div>
						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Upstreams Peers
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								{upStreamsPeers.length}
							</dd>
						</div>

						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Current Used Traffic
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								<div class="-mt-px flex" title="downloads">
									<div class="flex w-0 flex-1">
										<a
											class="relative inline-flex w-0 flex-1 rounded-br-lg border border-transparent py-4 text-sm font-medium text-gray-700 dark:text-gray-100"
										>
											<svg
												class="h-5 w-5 text-gray-400 dark:text-gray-100"
												xmlns="http://www.w3.org/2000/svg"
												class="ionicon"
												viewBox="0 0 512 512"
											>
												<title>Download</title>
												<path
													fill="none"
													stroke="currentColor"
													stroke-linecap="round"
													stroke-linejoin="round"
													stroke-width="48"
													d="M112 268l144 144 144-144M256 392V100"
												></path>
											</svg>
											<span class="ml-3">
												{getSize(Traffic.download)}
											</span>
										</a>
									</div>
									<div
										class="-ml-px flex w-0 flex-1"
										title="uploads"
									>
										<a
											class="relative -mr-px inline-flex w-0 flex-1 rounded-bl-lg border border-transparent py-4 text-sm font-medium text-gray-700 dark:text-gray-100"
										>
											<svg
												class="h-5 w-5 text-gray-400 dark:text-gray-100"
												xmlns="http://www.w3.org/2000/svg"
												class="ionicon"
												viewBox="0 0 512 512"
											>
												<title>Upload</title>
												<path
													fill="none"
													stroke="currentColor"
													stroke-linecap="round"
													stroke-linejoin="round"
													stroke-width="48"
													d="M112 244l144-144 144 144M256 120v292"
												></path>
											</svg>
											<span class="ml-3">
												{getSize(Traffic.upload)}
											</span>
										</a>
									</div>
								</div>
							</dd>
						</div>
						<div
							class="py-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:py-5 sm:px-6"
						>
							<dt class="text-sm font-medium text-gray-500 dark:text-gray-100">
								Load
							</dt>
							<dd
								class="text-sm text-gray-900 dark:text-gray-100 sm:col-span-2 sm:mt-0"
							>
								<img src="/output.png" alt="Traffic Uses" class="dark:bg-white dark:rounded-sm dark:p-2" />
							</dd>
						</div>
					</dl>
				</div>
			</div>
		</div>
	</main>

	<PeersTable
		title="Downstreams"
		description="peers connected by them self"
		peers={downStreamsPeers}
	/>
	<PeersTable
		title="Upstreams"
		description="peers connected directly"
		peers={upStreamsPeers}
	/>
</Layout>
