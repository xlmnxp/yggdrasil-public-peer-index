---
export interface Props {
    name: string;
    data: any;
}

const { name, data } = Astro.props;

export function getSize(size: number) {
    var i: number = Math.floor(Math.log(size) / Math.log(1024));
    return (
        // @ts-ignore
        ((size / Math.pow(1024, i)).toFixed(2) * 1) +
        " " +
        ["B", "kB", "MB", "GB", "TB"][i]
    );
};
---

<li class="col-span-1 divide-y divide-gray-200 rounded-lg bg-white shadow">
    <div class="flex w-full items-center justify-between space-x-6 p-6">
        <div class="flex-1 truncate">
            <div class="flex items-center space-x-3">
                <h3
                    class="truncate text-sm font-medium text-gray-900"
                    title={name}
                >
                    {name}
                </h3>
                <span
                    class="inline-block flex-shrink-0 rounded-full bg-green-100 px-2 py-0.5 text-xs font-medium text-green-800"
                    >{Math.floor(data.uptime / 60)} minute</span
                >
            </div>
            <p class="mt-1 truncate text-sm text-gray-500">
                [{data.coords.join(", ")}]
            </p>
        </div>
    </div>
    <div>
        <div class="-mt-px flex divide-x divide-gray-200">
            <div class="flex w-0 flex-1">
                <a
                    class="relative inline-flex w-0 flex-1 items-center justify-center rounded-br-lg border border-transparent py-4 text-sm font-medium text-gray-700 hover:text-gray-500"
                >
                    <svg
                        class="h-5 w-5 text-gray-400"
                        xmlns="http://www.w3.org/2000/svg"
                        class="ionicon"
                        viewBox="0 0 512 512"
                        ><title>Download</title><path
                            fill="none"
                            stroke="currentColor"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="48"
                            d="M112 268l144 144 144-144M256 392V100"></path>
                    </svg>
                    <span class="ml-3">{getSize(data.bytes_sent)}</span>
                </a>
            </div>
            <div class="-ml-px flex w-0 flex-1">
                <a
                    class="relative -mr-px inline-flex w-0 flex-1 items-center justify-center rounded-bl-lg border border-transparent py-4 text-sm font-medium text-gray-700 hover:text-gray-500"
                >
                    <svg
                        class="h-5 w-5 text-gray-400"
                        xmlns="http://www.w3.org/2000/svg"
                        class="ionicon"
                        viewBox="0 0 512 512"
                        ><title>Upload</title><path
                            fill="none"
                            stroke="currentColor"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="48"
                            d="M112 244l144-144 144 144M256 120v292"></path>
                    </svg>
                    <span class="ml-3">{getSize(data.bytes_recvd)}</span>
                </a>
            </div>
        </div>
    </div>
</li>
